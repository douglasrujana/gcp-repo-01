steps:
# === PASO 1: Ejecutar Pruebas con Pytest ===
# Si este paso falla, el pipeline se detiene.
- name: 'python:3.9-slim' # Usamos una imagen de Python
  entrypoint: 'bash'      # Para ejecutar comandos shell
  args:
  - '-c'
  - |
    echo "--- Instalando dependencias para pruebas ---" && \
    pip install -r requirements.txt && \
    echo "--- Ejecutando pruebas (pytest) ---" && \
    python -m pytest tests/
    # Instala dependencias y corre pytest en el directorio ./tests/

# === PASO 2: Construir la imagen Docker ===
# Solo se ejecuta si las pruebas (paso anterior) fueron exitosas.
# Usando la ruta original del archivo .bck
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  # Ruta original del .bck
  - 'us-central1-docker.pkg.dev/gcp-devops-454205/devops-images/gcp-repo-01:$COMMIT_SHA'
  - '.'

# === PASO 3: Subir (push) la imagen a Artifact Registry ===
# Solo se ejecuta si el build (paso anterior) fue exitoso.
# Usando la ruta original del .bck
- name: 'gcr.io/cloud-builders/docker'
  # Usa la misma ruta original
  args: ['push', 'us-central1-docker.pkg.dev/gcp-devops-454205/devops-images/gcp-repo-01:$COMMIT_SHA']

# Especifica la imagen resultante usando la ruta original
images:
# Usa la misma ruta original
- 'us-central1-docker.pkg.dev/gcp-devops-454205/devops-images/gcp-repo-01:$COMMIT_SHA'

# Mantenemos la opción de logging
options:
  logging: CLOUD_LOGGING_ONLY

# === PASO 4: Desplegar a Cloud Run ===
# Solo se ejecuta si el push (paso anterior) fue exitoso.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk' # Usa la imagen de gcloud
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'hola-mundo-service' # El nombre que le darás a tu servicio Cloud Run
    - '--image' # La imagen exacta que acabamos de subir a Artifact Registry
    - 'us-central1-docker.pkg.dev/gcp-devops-454205/devops-images/gcp-repo-01:$COMMIT_SHA'
    - '--region'
    - 'us-central1' # La región donde quieres desplegar el servicio Cloud Run
    - '--platform'
    - 'managed' # Plataforma serverless gestionada por Google
    - '--allow-unauthenticated' # Permite acceso público (¡cuidado en producción!)
